{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5002/api';\nconst getAuthHeaders = () => {\n  const token = localStorage.getItem('token');\n  return {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n};\nconst taskService = {\n  getAllTasks: async (filters = {}) => {\n    const params = new URLSearchParams();\n    if (filters.status) params.append('status', filters.status);\n    if (filters.priority) params.append('priority', filters.priority);\n    if (filters.sortBy) params.append('sortBy', filters.sortBy);\n    if (filters.sortOrder) params.append('sortOrder', filters.sortOrder);\n    if (filters.search) params.append('search', filters.search);\n    const response = await axios.get(`${API_URL}/tasks?${params}`, getAuthHeaders());\n    return response.data;\n  },\n  getTask: async id => {\n    const response = await axios.get(`${API_URL}/tasks/${id}`, getAuthHeaders());\n    return response.data;\n  },\n  createTask: async taskData => {\n    const response = await axios.post(`${API_URL}/tasks`, taskData, getAuthHeaders());\n    return response.data;\n  },\n  updateTask: async (id, taskData) => {\n    const response = await axios.put(`${API_URL}/tasks/${id}`, taskData, getAuthHeaders());\n    return response.data;\n  },\n  deleteTask: async id => {\n    const response = await axios.delete(`${API_URL}/tasks/${id}`, getAuthHeaders());\n    return response.data;\n  },\n  getTaskStats: async () => {\n    const response = await axios.get(`${API_URL}/tasks/stats/overview`, getAuthHeaders());\n    return response.data;\n  }\n};\nexport default taskService;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","getAuthHeaders","token","localStorage","getItem","headers","Authorization","taskService","getAllTasks","filters","params","URLSearchParams","status","append","priority","sortBy","sortOrder","search","response","get","data","getTask","id","createTask","taskData","post","updateTask","put","deleteTask","delete","getTaskStats"],"sources":["/Users/ishankverma/task-manager/client/src/services/taskService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5002/api';\n\nconst getAuthHeaders = () => {\n  const token = localStorage.getItem('token');\n  return {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n};\n\nconst taskService = {\n  getAllTasks: async (filters = {}) => {\n    const params = new URLSearchParams();\n    \n    if (filters.status) params.append('status', filters.status);\n    if (filters.priority) params.append('priority', filters.priority);\n    if (filters.sortBy) params.append('sortBy', filters.sortBy);\n    if (filters.sortOrder) params.append('sortOrder', filters.sortOrder);\n    if (filters.search) params.append('search', filters.search);\n\n    const response = await axios.get(`${API_URL}/tasks?${params}`, getAuthHeaders());\n    return response.data;\n  },\n\n  getTask: async (id) => {\n    const response = await axios.get(`${API_URL}/tasks/${id}`, getAuthHeaders());\n    return response.data;\n  },\n\n  createTask: async (taskData) => {\n    const response = await axios.post(`${API_URL}/tasks`, taskData, getAuthHeaders());\n    return response.data;\n  },\n\n  updateTask: async (id, taskData) => {\n    const response = await axios.put(`${API_URL}/tasks/${id}`, taskData, getAuthHeaders());\n    return response.data;\n  },\n\n  deleteTask: async (id) => {\n    const response = await axios.delete(`${API_URL}/tasks/${id}`, getAuthHeaders());\n    return response.data;\n  },\n\n  getTaskStats: async () => {\n    const response = await axios.get(`${API_URL}/tasks/stats/overview`, getAuthHeaders());\n    return response.data;\n  }\n};\n\nexport default taskService;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAE5E,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAC3B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,OAAO;IACLC,OAAO,EAAE;MACPC,aAAa,EAAE,UAAUJ,KAAK;IAChC;EACF,CAAC;AACH,CAAC;AAED,MAAMK,WAAW,GAAG;EAClBC,WAAW,EAAE,MAAAA,CAAOC,OAAO,GAAG,CAAC,CAAC,KAAK;IACnC,MAAMC,MAAM,GAAG,IAAIC,eAAe,CAAC,CAAC;IAEpC,IAAIF,OAAO,CAACG,MAAM,EAAEF,MAAM,CAACG,MAAM,CAAC,QAAQ,EAAEJ,OAAO,CAACG,MAAM,CAAC;IAC3D,IAAIH,OAAO,CAACK,QAAQ,EAAEJ,MAAM,CAACG,MAAM,CAAC,UAAU,EAAEJ,OAAO,CAACK,QAAQ,CAAC;IACjE,IAAIL,OAAO,CAACM,MAAM,EAAEL,MAAM,CAACG,MAAM,CAAC,QAAQ,EAAEJ,OAAO,CAACM,MAAM,CAAC;IAC3D,IAAIN,OAAO,CAACO,SAAS,EAAEN,MAAM,CAACG,MAAM,CAAC,WAAW,EAAEJ,OAAO,CAACO,SAAS,CAAC;IACpE,IAAIP,OAAO,CAACQ,MAAM,EAAEP,MAAM,CAACG,MAAM,CAAC,QAAQ,EAAEJ,OAAO,CAACQ,MAAM,CAAC;IAE3D,MAAMC,QAAQ,GAAG,MAAMtB,KAAK,CAACuB,GAAG,CAAC,GAAGtB,OAAO,UAAUa,MAAM,EAAE,EAAET,cAAc,CAAC,CAAC,CAAC;IAChF,OAAOiB,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDC,OAAO,EAAE,MAAOC,EAAE,IAAK;IACrB,MAAMJ,QAAQ,GAAG,MAAMtB,KAAK,CAACuB,GAAG,CAAC,GAAGtB,OAAO,UAAUyB,EAAE,EAAE,EAAErB,cAAc,CAAC,CAAC,CAAC;IAC5E,OAAOiB,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDG,UAAU,EAAE,MAAOC,QAAQ,IAAK;IAC9B,MAAMN,QAAQ,GAAG,MAAMtB,KAAK,CAAC6B,IAAI,CAAC,GAAG5B,OAAO,QAAQ,EAAE2B,QAAQ,EAAEvB,cAAc,CAAC,CAAC,CAAC;IACjF,OAAOiB,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDM,UAAU,EAAE,MAAAA,CAAOJ,EAAE,EAAEE,QAAQ,KAAK;IAClC,MAAMN,QAAQ,GAAG,MAAMtB,KAAK,CAAC+B,GAAG,CAAC,GAAG9B,OAAO,UAAUyB,EAAE,EAAE,EAAEE,QAAQ,EAAEvB,cAAc,CAAC,CAAC,CAAC;IACtF,OAAOiB,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDQ,UAAU,EAAE,MAAON,EAAE,IAAK;IACxB,MAAMJ,QAAQ,GAAG,MAAMtB,KAAK,CAACiC,MAAM,CAAC,GAAGhC,OAAO,UAAUyB,EAAE,EAAE,EAAErB,cAAc,CAAC,CAAC,CAAC;IAC/E,OAAOiB,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDU,YAAY,EAAE,MAAAA,CAAA,KAAY;IACxB,MAAMZ,QAAQ,GAAG,MAAMtB,KAAK,CAACuB,GAAG,CAAC,GAAGtB,OAAO,uBAAuB,EAAEI,cAAc,CAAC,CAAC,CAAC;IACrF,OAAOiB,QAAQ,CAACE,IAAI;EACtB;AACF,CAAC;AAED,eAAeb,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}